template<class T>
int Heap<T>::size(){
    return this->count;
}

template<class T>
bool Heap<T>::isEmpty(){
    return this->count == 0;
}

template<class T>
T Heap<T>::peek(){
   if (isEmpty()) {
        return -1;
    }
    return elements[0];
}

template<class T>
bool Heap<T>::contains(T item){
    for (int i=0;i< count; i++)
    {
        if (item == elements[i])
        {
            return true;
        }
    }
    return false;
}

template<class T>
bool Heap<T>::pop(){
    if (isEmpty()) {
        return false;
    }

    count--;
    swap(elements[0], elements[count]);
    reheapDown(0);
    return true;
    
}