int leastAfter(vector<int>& nums, int k) {
    // STUDENT ANSWER
    // Use a priority queue (min-heap)
    priority_queue<int, vector<int>, greater<int>> minHeap(nums.begin(), nums.end());
    
    // Perform the operation k times
    for (int i = 0; i < k; i++) {
        int smallest = minHeap.top();  // Get the smallest element
        minHeap.pop();  // Remove it from the heap
        minHeap.push(smallest * 2);  // Multiply it by 2 and push it back
    }

    // The smallest element is now at the top of the heap
    return minHeap.top();
}